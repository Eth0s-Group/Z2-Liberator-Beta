{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCEA,SAAS,cAAc,CAAC,QAAQ,gBAAgB,CAAC,QAAS,UACxD,MAAM,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,GACR,GAEA,SAAS,cAAc,CAAC,SAAS,gBAAgB,CAAC,QAAS,UACzD,MAAM,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,GACR,GAEA,SAAS,cAAc,CAAC,cAAc,gBAAgB,CAAC,QAAS,UAC9D,MAAM,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,GACR,GAEA,SAAS,aAAa,CAAC,aAAa,gBAAgB,CAAC,QAAS,UAC5D,IAAM,EAAkB,MAAM,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,EAAK,OAAQ,CAAA,GAC3C,QAAQ,GAAG,CAAC,GACZ,QAAQ,GAAG,CAAC,EAAe,MAAM,EACjC,QAAQ,GAAG,CAAC,EAAe,MAAM,CACnC,GAEA,SAAS,aAAa,CAAC,YAAY,gBAAgB,CAAC,QAAS,UAC3D,MAAM,AAAA,CAAA,EAAA,EAAA,YAAW,AAAX,GACR,GAEA,SAAS,aAAa,CAAC,YAAY,gBAAgB,CAAC,QAAS,UAE3D,IAAM,EAAO,AADM,SAAS,aAAa,CAAC,QAClB,KAAK,CAAC,EAAE,CAC1B,EAAc,SAAS,aAAa,CAAC,UAC3C,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY,EAAM,EAAY,KAAK,CACrC,GAEA,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,QAAS,UACxD,IAAM,EAAO,SAAS,aAAa,CAAC,WAAW,KAAK,CAAC,EAAE,CACvD,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,EAAe,EACjB,GAEA,SAAS,aAAa,CAAC,QAAQ,gBAAgB,CAAC,QAAS,UACvD,IAAM,EAAS,SAAS,aAAa,CAAC,UACtC,OAAM,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,EAAK,EAAO,KAAK,EACvB,EAAO,KAAK,CAAG,GACf,EAAO,KAAK,EACd,GAEA,MAAM,EAAc,SAAS,aAAa,CAAC,YAC3C,EAAY,gBAAgB,CAAC,SAAU,KACrC,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,EAAY,KAAK,CACnC,GAEA,MAAM,EAAc,SAAS,aAAa,CAAC,uBAC3C,CAAA,EAAY,OAAO,CAAG,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,IACtB,EAAY,gBAAgB,CAAC,SAAU,KACrC,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,EAAY,OAAO,CACrC,GAEA,SAAS,aAAa,CAAC,iBAAiB,gBAAgB,CAAC,QAAS,KAChE,AAAA,CAAA,EAAA,EAAA,IAAG,AAAH,EAAK,8DACP,GAEA,AAAA,CAAA,EAAA,EAAA,WAAU,AAAV,EAAY","sources":["<anon>","src/js/dev_panel.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire75f2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire75f2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $h6ark = parcelRequire(\"h6ark\");\ndocument.getElementById(\"pair\").addEventListener(\"click\", async ()=>{\n    await (0, $h6ark.pair_device)();\n});\ndocument.getElementById(\"start\").addEventListener(\"click\", async ()=>{\n    await (0, $h6ark.connect_device)();\n});\ndocument.getElementById(\"disconnect\").addEventListener(\"click\", async ()=>{\n    await (0, $h6ark.disconnect)();\n});\ndocument.querySelector(\"#test_cmd\").addEventListener(\"click\", async ()=>{\n    const command_output = await (0, $h6ark.godo)(\"ls /\", true);\n    console.log(command_output);\n    console.log(command_output.stderr);\n    console.log(command_output.stdout);\n});\ndocument.querySelector(\"#exploit\").addEventListener(\"click\", async ()=>{\n    await (0, $h6ark.exploit_gabb)();\n});\ndocument.querySelector(\"#install\").addEventListener(\"click\", async ()=>{\n    const file_input = document.querySelector(\"#apk\");\n    const file = file_input.files[0];\n    const user_select = document.querySelector(\"#users\");\n    (0, $h6ark.install_app)(file, user_select.value);\n});\ndocument.querySelector(\"#send\").addEventListener(\"click\", async ()=>{\n    const file = document.querySelector(\"#sender\").files[0];\n    (0, $h6ark.send_to_device)(file);\n});\ndocument.querySelector(\"#run\").addEventListener(\"click\", async ()=>{\n    const runner = document.querySelector(\"#runner\");\n    await (0, $h6ark.godo)(runner.value);\n    runner.value = \"\";\n    runner.focus();\n});\nconst $e0cf9ec953235470$var$device_list = document.querySelector(\"#devices\");\n$e0cf9ec953235470$var$device_list.addEventListener(\"change\", ()=>{\n    (0, $h6ark.select_existing)($e0cf9ec953235470$var$device_list.value);\n});\nconst $e0cf9ec953235470$var$autoconnect = document.querySelector('[name=\"autoconnect\"]');\n$e0cf9ec953235470$var$autoconnect.checked = (0, $h6ark.get_autoconnect)();\n$e0cf9ec953235470$var$autoconnect.addEventListener(\"change\", ()=>{\n    (0, $h6ark.set_autoconnect)($e0cf9ec953235470$var$autoconnect.checked);\n});\ndocument.querySelector(\"#startshizuku\").addEventListener(\"click\", ()=>{\n    (0, $h6ark.godo)(`sh /sdcard/Android/data/moe.shizuku.privileged.api/start.sh`);\n});\n(0, $h6ark.monitor_usb)($e0cf9ec953235470$var$device_list);\n\n\n//# sourceMappingURL=dev_panel.b0b95aaa.js.map\n","import { connect_device, exploit_gabb, get_autoconnect, godo, monitor_usb, pair_device, select_existing, send_to_device, set_autoconnect, disconnect, install_app } from \"./common\"\n\ndocument.getElementById(\"pair\").addEventListener(\"click\", async () => {\n  await pair_device();\n});\n\ndocument.getElementById(\"start\").addEventListener(\"click\", async () => {\n  await connect_device();\n});\n\ndocument.getElementById(\"disconnect\").addEventListener(\"click\", async () => {\n  await disconnect();\n});\n\ndocument.querySelector(\"#test_cmd\").addEventListener(\"click\", async () => {\n  const command_output = (await godo(\"ls /\", true));\n  console.log(command_output)\n  console.log(command_output.stderr)\n  console.log(command_output.stdout)\n});\n\ndocument.querySelector(\"#exploit\").addEventListener(\"click\", async () => {\n  await exploit_gabb();\n});\n\ndocument.querySelector(\"#install\").addEventListener(\"click\", async () => {\n  const file_input = document.querySelector(\"#apk\");\n  const file = file_input.files[0];\n  const user_select = document.querySelector(\"#users\");\n  install_app(file, user_select.value);\n});\n\ndocument.querySelector(\"#send\").addEventListener(\"click\", async () => {\n  const file = document.querySelector(\"#sender\").files[0];\n  send_to_device(file);\n})\n\ndocument.querySelector(\"#run\").addEventListener(\"click\", async () => {\n  const runner = document.querySelector(\"#runner\");\n  await godo(runner.value);\n  runner.value = \"\";\n  runner.focus();\n});\n\nconst device_list = document.querySelector(\"#devices\");\ndevice_list.addEventListener(\"change\", () => {\n  select_existing(device_list.value);\n});\n\nconst autoconnect = document.querySelector(\"[name=\\\"autoconnect\\\"]\");\nautoconnect.checked = get_autoconnect();\nautoconnect.addEventListener(\"change\", () => {\n  set_autoconnect(autoconnect.checked);\n});\n\ndocument.querySelector(\"#startshizuku\").addEventListener(\"click\", () => {\n  godo(`sh /sdcard/Android/data/moe.shizuku.privileged.api/start.sh`);\n})\n\nmonitor_usb(device_list);"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$h6ark","document","getElementById","addEventListener","pair_device","connect_device","disconnect","querySelector","command_output","godo","console","log","stderr","stdout","exploit_gabb","file","file_input","files","user_select","install_app","value","send_to_device","runner","focus","$e0cf9ec953235470$var$device_list","select_existing","$e0cf9ec953235470$var$autoconnect","checked","get_autoconnect","set_autoconnect","monitor_usb"],"version":3,"file":"dev_panel.b0b95aaa.js.map"}